name: Generation

on:
  schedule:
    - cron: "0 6 * * *"
  push:
    branches:
      - master
  workflow_dispatch:
  
  
env:
    DOTNET_NOLOGO: true
    VERBOSE: true
    
    
jobs: 

  Windows-x64:
    runs-on: windows-latest
    steps:   
      - uses: actions/checkout@v2
      - name: Clone submodules
        run: |
          git submodule update --init --recursive
      - name: Generate
        run: |
          cd .\Generator\
          dotnet run
      - name: Add generated files
        run: git add .
      - name: Get cimgui dependencies
        run: Copy-item -Force -Recurse -Verbose ".\cimgui-deps\*" -Destination ".\cimgui\"
      - name: Prepare cimgui
        run: |
          Copy-item -Force -Verbose .\cimgui-deps\CMakeLists.txt -Destination .\cimgui\
          ((Get-Content .\cimgui\cimgui.cpp -Raw) -replace "#include `"cimgui.h`"","#define CIMGUI_NO_EXPORT`n#include `"cimgui.h`"`n#include <imgui/examples/imgui_impl_opengl3.h>`n#include <imgui/examples/imgui_impl_opengl2.h>`n#include <imgui/examples/imgui_impl_glfw.h>") | Set-Content .\cimgui\cimgui.cpp
      - name: Build cimgui
        run: |
          cd .\cimgui\
          cmake .
          cmake --build . --target ALL_BUILD --config Debug -- /nologo /maxcpucount
          cmake --build . --target ALL_BUILD --config Release -- /nologo /maxcpucount
      - name: Copy binaries to dist
        run: |
          Copy-item -Force -Verbose ".\cimgui\Debug\cimgui.lib" -Destination ".\ImGui\dist\Debug-Win64\"
          Copy-item -Force -Verbose ".\cimgui\Release\cimgui.lib" -Destination ".\ImGui\dist\Release-Win64\"
      - name: Commit and push
        run: |
          git checkout -b build
          git add ImGui/dist/\*
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -m "Generation"
          git push origin build
          
  Linux-x64:
    runs-on: ubuntu-latest
    steps:   
      - uses: actions/checkout@v2
      - name: Clone submodules
        run: |
          git submodule update --init --recursive
      - name: Generate
        run: |
          cd ./Generator/
          dotnet run
      - name: Add generated files
        run: git add .
      - name: Get cimgui dependencies
        run: echo "TODO"
      - name: Prepare cimgui
        run: echo "TODO"
      - name: Build cimgui
        run: |
          cd ./cimgui/
          cmake .
          cmake -DIMGUI_STATIC=yes
          cmake --build . --config Debug
          cp "./cimgui.a" "./ImGui/dist/Debug-Linux64/"
          cmake --build . --config Release
          cp "./cimgui.a" "./ImGui/dist/Release-Linux64/"
      - name: Commit and push
        run: |
          git checkout -b build
          git add ImGui/dist/\*
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -m "Generation"
          git push origin build


  macOS:
    runs-on: macOS-latest
    steps:   
      - uses: actions/checkout@v2
      - name: Clone submodules
        run: |
          git submodule update --init --recursive
      - name: Generate
        run: |
          cd ./Generator/
          dotnet run
      - name: Add generated files
        run: git add .
      - name: Get cimgui dependencies
        run: echo "TODO"
      - name: Prepare cimgui
        run: echo "TODO"
      - name: Build cimgui
        run: |
          cd ./cimgui/
          cmake .
          cmake --build . --target ALL_BUILD --config Debug
          cmake --build . --target ALL_BUILD --config Release
      - name: Copy binaries to dist
        run: |
          cp "./cimgui/Debug/cimgui.a" "./ImGui/dist/Debug-MacOSx64/"
          cp "./cimgui/Release/cimgui.a" "./ImGui/dist/Release-MacOSx64/"
      - name: Commit and push
        run: |
          git checkout -b build
          git add ImGui/dist/\*
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -m "Generation"
          git push origin build
    
